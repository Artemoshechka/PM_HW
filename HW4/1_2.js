/*1. Оператор + складывает числовые операнды или выполняет конкатенацию и если один из операндов строка, то
второй операнд превращается в строку и выполняется конкатенация.*/
/*console.log(2 + "2" == "2" + 2);  //Оператор + Получим две строки 22 и true на выводе
console.log(2 + "3" == "3" + 2); //Получим строки 23 и 32 и false на выводе
console.log("3" + "2" == 3 + 2); //Получим строку 32 и число 5 и false на выводе
console.log("3" + "2" == "3" + 2); //Получим две строки 32 и true на выводе
console.log("3" + "2" == 2 + "3"); //Получим строки 32 и 23 и false на выводе
console.log(2 + Number("3") == Number("3") + 2); //Получим 5 == 5, поскольку Number переведет строку 3 в число 3, true на выводе


console.log(12 / "6"); //Строка 6 станет числом и на выводе получим 2
console.log("number" + 15 + 3); //На выводе получим number153
console.log(15 + 3 + "number"); //Сначала произойдет сложение 15 + 3 что даст 18, а потом произойдет конкатенация 18 и number
console.log([1] > null); //Тут осуществится перевод к числу и получим 1 > 0, что на выводе дает true
console.log("foo" + + "bar"); //Выражение эвкивалентно выражению ("foo" + (+ "bar")), префиксный + попытается перевести строку "bar" в число, потому получим "Nan" и соответсвенно на выводе fooNan
console.log('true' == true);  //При таком сравнении js пытается перевести строку 'true' и бул значение true в число, потому слева мы получаем Nan, а справа единицу, что в итоге дает false
console.log(false == 'false'); //Аналогично к прошлому примеру получим false
console.log(null == ''); //null при всех сравнениях == кроме "null == null" и "null == undefined" дает false, что и будет выведено в этом случае
console.log(!!"false" == !!"true"); //"false" и "true" при преобразовании в bool дадут true, после двойного отрицания будет true==true, на выводе будет true
console.log([`x`] == `x`); //На выводе получим true, так как сравниться первый элемент массива с 'x', а они идентичны
*/

/*
2.
const enemy = {
    name: "Bob"
};
const friend = {
    name: "Alex"
};
const me = friend;

me.name = "Bob";

console.log(friend.name); //Выведет Bob, потому что me и friend ссылались на один объект, и строка me.name = "Bob" изменила объект, а friend ссылается на тот же объект
console.log(me === friend); //Выведет true, так как friend и me идентичны(ссылаются на один и тот же объект)
console.log(me === enemy); //Выведет false, так как me и enemy разные объекты, хоть и значения внутри равны
*/